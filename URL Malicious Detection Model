**Model_Architecture_code** 
class URLCNN(nn.Module): 
    def __init__(self, input_size): 
        super(URLCNN, self).__init__() 
        self.fc1 = nn.Linear(input_size, 512) 
        self.bn1 = nn.BatchNorm1d(512) 
        self.fc2 = nn.Linear(512, 256) 
        self.bn2 = nn.BatchNorm1d(256) 
        self.fc3 = nn.Linear(256, 128) 
        self.fc4 = nn.Linear(128, 2)  # **Binary Classification** 
        self.relu = nn.ReLU() 
    def forward(self, x):
        x = self.relu(self.bn1(self.fc1(x))) 
        x = self.relu(self.bn2(self.fc2(x))) 
        x = self.relu(self.fc3(x)) 
        return self.fc4(x)  # No LogSoftmax (Handled by CrossEntropyLoss) 
 **Load Model Weights** 
model = URLCNN(input_size=1599).to(device)
